@model List<(string Sender, string Message)>

@{
    ViewData["Title"] = "Chat với GPT";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Use your shared layout
}

<div class="container mt-5">
    <h1 class="text-center mb-4">ChatGPT</h1>

    <!-- Chat Message Container -->
    <div class="card">
        <div class="card-body chat-container" id="chat-container">
            @foreach (var message in Model)
            {
                <div class="chat-message @(message.Sender == "User" ? "user" : "gpt")">
                    <div class="message-content">
                        @if (message.Message.Contains("<img") || message.Message.StartsWith("[Ảnh được phân tích]"))
                        {
                            @Html.Raw(message.Message) <!-- Hiển thị HTML chứa hình ảnh hoặc nội dung OCR -->
                        }
                        else
                        {
                            <strong>@message.Sender:</strong> <span>@message.Message</span>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Input Forms -->
    <div class="mt-3">
        <!-- Chat Input Form -->
        <form id="chat-form" method="post" action="/ChatGPT/SendMessage">
            <div class="input-group">
                <input type="text" class="form-control" id="userMessage" name="userMessage" placeholder="Nhập tin nhắn..." required>
                <button class="btn btn-primary" type="submit">Gửi</button>
            </div>
        </form>

        <!-- File Upload Form -->
        <form method="post" enctype="multipart/form-data" action="/ChatGPT/UploadFile" class="mt-3">
            <div class="input-group">
                <input type="file" class="form-control" name="file" accept=".txt">
                <button class="btn btn-secondary" type="submit">Gửi File</button>
            </div>
        </form>

        <!-- Reset Chat Form -->
        <form method="post" action="/ChatGPT/ClearLearnedDataAndResetChat" class="mt-3">
            <button class="btn btn-warning w-100" type="submit">Reset</button>
        </form>

        <!-- Generate Image Form -->
        <form id="generate-image-form" method="post" action="/ChatGPT/GenerateImageFromChat" class="mt-3">
            <div class="input-group">
                <input type="text" class="form-control" id="imageDescription" name="userMessage" placeholder="Nhập mô tả hình ảnh..." required>
                <button class="btn btn-success" type="button" id="generateImageButton">Tạo ảnh</button>
            </div>
        </form>

        <!-- Analyze Image Form -->
        <form method="post" enctype="multipart/form-data" action="/ChatGPT/AnalyzeImage" class="mt-3">
            <div class="input-group">
                <input type="file" class="form-control" name="file" accept="image/*" required>
                <button class="btn btn-secondary" type="submit">Phân Tích Ảnh</button>
            </div>
        </form>

        <!-- Save Chat History Form -->
        <form method="post" action="/ChatGPT/SaveHistory" class="mt-3">
            <button class="btn btn-primary w-100" type="submit">Lưu Lịch Sử</button>
        </form>
    </div>
</div>

<script>
    // Auto-scroll to bottom of chat
    function scrollToBottom() {
        const chatContainer = document.getElementById('chat-container');
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    // Scroll after DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
        scrollToBottom();
    });

    // Scroll after submitting a message
    document.getElementById('chat-form').addEventListener('submit', () => {
        setTimeout(scrollToBottom, 100);
    });

    // Handle "Tạo ảnh" button
    document.getElementById('generateImageButton').addEventListener('click', () => {
        const form = document.getElementById('generate-image-form');
        const input = document.getElementById('imageDescription');

        if (input.value.trim() === '') {
            alert('Vui lòng nhập mô tả hình ảnh!');
            return;
        }

        form.submit();
    });
</script>

<!-- Styles -->
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f9f9f9;
    }

    .chat-container {
        max-height: 500px;
        overflow-y: auto;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background-color: #fff;
    }

    .chat-message {
        margin-bottom: 15px;
    }

        .chat-message.user {
            text-align: right;
        }

        .chat-message.gpt {
            text-align: left;
        }

    .message-content {
        display: inline-block;
        padding: 10px 15px;
        border-radius: 20px;
        max-width: 70%;
        word-wrap: break-word;
    }

        .message-content.user {
            background-color: #dcf8c6;
            color: #000;
        }

        .message-content.gpt {
            background-color: #f1f0f0;
            color: #000;
        }

    .input-group .form-control {
        border-radius: 20px;
    }

    .input-group .btn {
        border-radius: 20px;
    }
</style>
